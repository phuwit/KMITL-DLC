# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: publish

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        path: temp/dist.zip

  amo-sign:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4

      - run: unzip dist.zip

      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: dist

      - uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: ${{ steps.web-ext-build.outputs.target }}
          sourceCode: source.zip
          channel: unlisted
          license: AGPL-3.0-only
          apiKey: ${{ secrets.WEB_EXT_API_KEY }}
          apiSecret: ${{ secrets.WEB_EXT_API_SECRET }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.web-ext-sign.outputs.target }}

  # chrome-upload:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: wdzeng/chrome-extension@v1
  #     with:
  #       extension-id: your-extension-id
  #       zip-path: your-extension.zip
  #       client-id: ${{ secrets.CHROME_CLIENT_ID }}
  #       client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
  #       refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}

  github-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - run: gh release upload ${{ github.event.release.tag_name }} artifacts/*
        env:
            GH_TOKEN: ${{ github.token }}
