# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: publish

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*]
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - run: pnpm run build
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unpacked
          path: dist/

  amo-sign:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - run: pnpm run sign

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-ext-artifacts
          path: web-ext-artifacts/

  # chrome-upload:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: wdzeng/chrome-extension@v1
  #     with:
  #       extension-id: your-extension-id
  #       zip-path: your-extension.zip
  #       client-id: ${{ secrets.CHROME_CLIENT_ID }}
  #       client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
  #       refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}

  github-upload:
    needs: [build, amo-sign]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - run: gh release upload ${{ github.event.release.tag_name }} artifacts/*
        env:
          GH_TOKEN: ${{ github.token }}
